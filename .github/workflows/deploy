# name: Build & Deploy Release

# on:
#   push:
#     branches:
#       - main
# jobs:
#   # testing:
#   #   name: Testing
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3

#   #     - name: An action to get the Content of a Key from pubspec.yaml in a Flutter App
#   #       id: app-version
#   #       uses: alvarogabrielgomez/action-get-pubspec-key-flutter@v1.0.4
#   #     - run: echo "The content of- the key ${{steps.app-version.outputs.key}} is ${{ steps.app-version.outputs.content }}."

#   build-dev:
#     name: Build APK for Dev
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Get Keystore Properties (Debug)
#         run: echo 'storePassword=${{secrets.ANDROID_KEY_STORE_PASSWORD}} keyPassword=${{secrets.ANDROID_KEY_PASSWORD}} keyAlias=${{secrets.ANDROID_ALIAS}}' > ${{ github.workspace }}/android/debug-keystore.properties

#       - name: Get Keystore jks (Debug)
#         run: |
#           echo '${{ secrets.ANDROID_SIGNING_KEY }}' > debug-keystore-base64.txt
#           openssl base64 -d -in debug-keystore-base64.txt -out ${{ github.workspace }}/android/debug-keystore.jks

#       - uses: actions/setup-java@v2
#         with:
#           distribution: "temurin"
#           java-version: "11.x"

#       # - name: Get Flutter version
#       #   id: get-flutter-version
#       #   uses: zgosalvez/github-actions-get-flutter-version-env@v1
#       - uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#           # flutter-version: ${{ steps.get-flutter-version.outputs.version }}

#       - run: flutter --version
#       - run: flutter pub get
#       # - run: flutter test

#       - name: Build Apk (Debug)
#         run: >
#           flutter build apk --debug \
#             --split-debug-info=build/app/outputs/symbols \
#             --dart-define=API_URL=${{secrets.DEV_API_URL}}

#       - uses: actions/upload-artifact@v3
#         with:
#           name: dev-apk
#           path: build/app/outputs/flutter-apk/*

#   # build-prod:
#   #   name: Build Bundle for Prod
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - uses: actions/setup-java@v2
#   #       with:
#   #         distribution: "temurin"
#   #         java-version: "11.x"

#   #     # - name: Get Flutter version
#   #     #   id: get-flutter-version
#   #     #   uses: zgosalvez/github-actions-get-flutter-version-env@v1

#   #     - uses: subosito/flutter-action@v2
#   #       with:
#   #         channel: "stable"
#   #         # flutter-version: ${{ steps.get-flutter-version.outputs.version }}

#   #     - run: flutter --version
#   #     - run: flutter pub get
#   #     # - run: flutter test
#   #     - name: Build Bundle (Release)
#   #       run: >
#   #         flutter build appbundle --release \
#   #           --obfuscate \
#   #           --split-debug-info=build/app/outputs/symbols \
#   #           --dart-define=API_URL=${{secrets.PROD_API_URL}}

#   #     - uses: actions/upload-artifact@v3
#   #       with:
#   #         name: prod-bundle
#   #         path: build/app/outputs/bundle/release/*

#   # publish-prod-playstore-internal:
#   #   needs: build-prod
#   #   name: Upload Prod Bundle to Play Store as internal
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - uses: actions/download-artifact@v3
#   #       with:
#   #         name: prod-bundle
#   #         path: build/app/outputs/bundle/release/

#   #     - name: Create service_account.json
#   #       run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

#   #     - uses: r0adkll/upload-google-play@v1.0.16
#   #       with:
#   #         serviceAccountJson: service_account.json
#   #         packageName: "com.accentiostudios.mamaafrica"
#   #         releaseFiles: ${{ github.workspace }}/build/app/outputs/bundle/release/*.aab
#   #         track: internal
#   #         status: draft
#   #         inAppUpdatePriority: 5
#   #         whatsNewDirectory: whatsNewDirectory
#   #         # mappingFile: app/build/outputs/mapping/release/mapping.txt

#   # publish-dev-github:
#   #   needs: build-dev
#   #   name: Push Dev Apk as Release on Github
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - uses: actions/download-artifact@v3
#   #       with:
#   #         name: dev-apk
#   #         path: build/app/outputs/flutter-apk/

#   #     - name: Delete older releases
#   #       uses: dev-drprasad/delete-older-releases@v0.2.0
#   #       with:
#   #         keep_latest: 3
#   #       env:
#   #         GITHUB_TOKEN: ${{secrets.GITHUBACTION_TOKEN}}

#   #     - name: Upload new release
#   #       uses: ncipollo/release-action@v1
#   #       with:
#   #         name: "build-dev-v1.0.0+${{github.run_number}}"
#   #         artifacts: "build/app/outputs/flutter-apk/*"
#   #         tag: v1.0.0+${{github.run_number}}
#   #         token: ${{secrets.GITHUBACTION_TOKEN}}
